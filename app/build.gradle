apply plugin: 'com.android.application'

// APT processor plugin (to help Dagger): https://bitbucket.org/hvisser/android-apt
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }
    }

    publishNonDefault true
    defaultPublishConfig "debug"

    // Allow us access to recent Java improvements
    // such as switch statements with strings etc.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {
        App {
            applicationId "nz.co.cjc.framework"
            versionCode 1000000
            versionName "1.0.0"
        }

    }

    signingConfigs {
        releaseApp {
            storeFile file('release_app.jks')
            storePassword getEnvironmentProperty('APP_KEY_STORE_PASSWORD')
            keyAlias getEnvironmentProperty('APP_KEY_ALIAS')
            keyPassword getEnvironmentProperty('APP_KEY_ALIAS_PASSWORD')
        }
        productFlavors.App.signingConfig signingConfigs.releaseApp

    }
}

dependencies {
    // EventBus: https://github.com/greenrobot/EventBus
    compile 'org.greenrobot:eventbus:3.0.0'

    // OkHttp: http://square.github.io/okhttp/
    compile 'com.squareup.okhttp3:okhttp:3.2.0'

    //https://github.com/pakerfeldt/okhttp-signpost
    compile 'se.akerfeldt:okhttp-signpost:1.1.0'
    compile 'oauth.signpost:signpost-core:1.2.1.2'

    // Glide: https://github.com/bumptech/glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    // Dagger: http://google.github.io/dagger/
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.google.dagger:dagger:2.0.2'

    // Butterknife: http://jakewharton.github.io/butterknife/
    compile 'com.jakewharton:butterknife:8.0.1'

    // https://github.com/google/gson
    compile 'com.google.code.gson:gson:2.6.1'

    // Stick List Headers: https://github.com/emilsjolander/StickyListHeaders
    compile 'se.emilsjolander:stickylistheaders:2.7.0'

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:cardview-v7:23.3.0'

    // Unit testing
    testCompile(group: 'junit', name: 'junit', version: '4.12') {
        exclude module: 'hamcrest-core'
    }

    testCompile(group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3')
    // http://mockito.org/
    testCompile(group: 'org.mockito', name: 'mockito-core', version: '1.10.19')
    testCompile(group: 'org.robolectric', name: 'shadows-multidex', version: '3.0')
    // http://robolectric.org/getting-started/
    testCompile(group: 'org.robolectric', name: 'robolectric', version: '3.0') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'support-v4'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
    androidTestCompile 'com.android.support:support-annotations:23.3.0'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.1'
}

// This method is used to find environment key/value pairs, used for signing builds
def getEnvironmentProperty(key) {
    def result = ''

    // First see if the host environment has a project property for signing
    if (project.hasProperty(key)) {
        result = project.getProperty(key)
    }

    // Then check if there are environment variables set for signing -
    // environment variables will override project property config.
    if (System.getenv(key) != null) {
        result = System.getenv(key)
    }

    return result
}

// Need to make the method globally available
ext {
    getEnvironmentProperty = this.&getEnvironmentProperty
}
